//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dz_5.DbInteractionNamespace {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTables", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class DataTables : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable DepTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable EmpTableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable DepTable {
            get {
                return this.DepTableField;
            }
            set {
                if ((object.ReferenceEquals(this.DepTableField, value) != true)) {
                    this.DepTableField = value;
                    this.RaisePropertyChanged("DepTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable EmpTable {
            get {
                return this.EmpTableField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpTableField, value) != true)) {
                    this.EmpTableField = value;
                    this.RaisePropertyChanged("EmpTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DbInteractionNamespace.IDbInteraction")]
    public interface IDbInteraction {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbInteraction/Update", ReplyAction="http://tempuri.org/IDbInteraction/UpdateResponse")]
        void Update(Dz_5.DbInteractionNamespace.DataTables tables);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbInteraction/Update", ReplyAction="http://tempuri.org/IDbInteraction/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Dz_5.DbInteractionNamespace.DataTables tables);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbInteraction/Init", ReplyAction="http://tempuri.org/IDbInteraction/InitResponse")]
        Dz_5.DbInteractionNamespace.DataTables Init();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbInteraction/Init", ReplyAction="http://tempuri.org/IDbInteraction/InitResponse")]
        System.Threading.Tasks.Task<Dz_5.DbInteractionNamespace.DataTables> InitAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDbInteractionChannel : Dz_5.DbInteractionNamespace.IDbInteraction, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DbInteractionClient : System.ServiceModel.ClientBase<Dz_5.DbInteractionNamespace.IDbInteraction>, Dz_5.DbInteractionNamespace.IDbInteraction {
        
        public DbInteractionClient() {
        }
        
        public DbInteractionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DbInteractionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DbInteractionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DbInteractionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Update(Dz_5.DbInteractionNamespace.DataTables tables) {
            base.Channel.Update(tables);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Dz_5.DbInteractionNamespace.DataTables tables) {
            return base.Channel.UpdateAsync(tables);
        }
        
        public Dz_5.DbInteractionNamespace.DataTables Init() {
            return base.Channel.Init();
        }
        
        public System.Threading.Tasks.Task<Dz_5.DbInteractionNamespace.DataTables> InitAsync() {
            return base.Channel.InitAsync();
        }
    }
}
